<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://artemis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--mysql 连接数据库jar 这里选择自己本地位置-->
    <classPathEntry location="C:/javawebhost/dbdriver/mysql-connector-java-8.0.17.jar" />
    <context id="testTables" targetRuntime="MyBatis3">
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 生成一对一配置 -->
        <plugin type="cc.bandaotixi.plugins.OneToOnePlugin"/>
        <!-- 生成一对多配置 -->
        <plugin type="cc.bandaotixi.plugins.OneToManyPlugin"/>
        <plugin type="cc.bandaotixi.plugins.BatchInsertPlugin"/>
        <plugin type="cc.bandaotixi.plugins.BatchUpdatePlugin"/>
        <commentGenerator type="cc.bandaotixi.plugins.BDTCommentGenerator">
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false" />
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection
                driverClass="com.mysql.cj.jdbc.Driver"
                connectionURL="jdbc:mysql://172.16.6.138:3306/glp_factor?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&amp;allowMultiQueries=true"
                userId="fero_datawh"
                password="Fero_datawh123">
        </jdbcConnection>
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
        NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>
        <!-- targetProject:生成PO类的位置 -->
        <javaModelGenerator targetPackage="com.glp.backend.mybatis.generate.factor.pojo" targetProject="src/main/java">
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false" />
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
            <!-- 给Model添加一个父类 -->
            <property name="rootClass" value="com.glp.backend.risk.tools.entity.BaseEntity"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>
        <!-- targetProject:mapper映射文件生成的位置
        如果maven工程只是单独的一个工程，targetProject="src/main/java"
        若果maven工程是分模块的工程，targetProject="所属模块的名称"，例如：
        targetProject="ecps-manager-mapper"，下同-->
        <sqlMapGenerator targetPackage="com.glp.backend.mybatis.generate.factor.mapper" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>
        <!-- targetPackage：mapper接口生成的位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.glp.backend.mybatis.generate.factor.dao" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
            <!-- 为生成的接口添加父接口 -->
            <property name="rootInterface" value="com.glp.backend.risk.tools.dao.BaseMapper"/>
        </javaClientGenerator>
        <!-- 指定数据库表 -->
        <table schema="" tableName="factor_bill" domainObjectName="FactorBill"
               enableCountByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="true"
               enableUpdateByExample="false">
            <property name="useActualColumnNames" value="false"/>
        </table>
        <table schema="" tableName="factor_product_order" domainObjectName="FactorProductOrder"
               enableCountByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="true"
               enableUpdateByExample="false">
            <property name="useActualColumnNames" value="false"/>
            <oneToMany mappingTable="factor_bill" column="order_number" joinColumn="order_number"/>
        </table>
<!--
        <table tableName="t_test" domainObjectName="TEst">
            <generatedKey column="test_id" sqlStatement="MySql" identity="true" />
            <oneToOne mappingTable="t_test" column="test_id" joinColumn="parent_test_id" where="t_test.is_deleted=0" />
        </table>
        <table tableName="t_test" domainObjectName="Test">
            <generatedKey column="test_id" sqlStatement="MySql" identity="true" />
            <oneToMany mappingTable="t_test" column="test_id" joinColumn="parent_test_id" where="t_test.is_deleted=0" />
        </table>
-->
    </context>
</generatorConfiguration>